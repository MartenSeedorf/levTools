#N canvas 360 0 703 838 10;
#X obj 102 103 cnv 15 120 250 empty empty shift 24 11 0 24 -233017
-1 0;
#X obj 3 -71 inlet~;
#X obj 319 518 outlet~;
#X msg 1094 9 5;
#X obj 106 140 vradio 18 0 0 10 \$0oktave \$0oktave_r empty 0 -8 0
10 -99865 -260097 -1 5;
#X obj 1022 524 r toolssavebank;
#X obj 1157 314 r toolssavebang;
#X obj 1321 498 f;
#X obj 1231 606 s toolssavelists;
#X obj 1186 418 f;
#X obj 1025 589 route;
#X obj 1307 259 loadbang;
#X obj 1308 315 \$1;
#X obj 1307 287 del 5;
#X obj 1186 377 del;
#X obj 95 15 inlet;
#X obj 113 41 - 1;
#X obj 320 482 hip~ 5;
#X floatatom 319 112 10 0 0 0 - - -, f 10;
#X obj 382 343 *~;
#X floatatom 537 123 0 0 0 0 - - -;
#X obj 319 156 exp;
#X floatatom 319 178 6 0 0 0 - - -, f 6;
#X obj 319 248 /;
#X obj 614 350 line~;
#X obj 615 327 pack 0 200;
#X floatatom 614 274 0 0 0 0 - - -;
#X obj 382 369 +~;
#X obj 319 393 cos~;
#X obj 319 420 *~;
#X obj 319 444 +~;
#X obj 406 302 wrap~;
#X obj 551 345 *~;
#X obj 551 375 +~;
#X obj 929 -15 loadbang;
#X obj 446 205 t b f;
#X floatatom 319 270 6 0 0 0 - - -, f 6;
#X obj 406 275 +~ 0.5;
#X obj 319 343 -~ 0.5;
#X obj 319 369 *~ 0.5;
#X obj 319 199 - 1;
#X obj 319 134 * 0.05776;
#X obj 319 221 * -1;
#X text 353 111 <-- transposition;
#X text 396 124 (halftones);
#X text 362 172 speed;
#X text 361 186 change;
#X text 798 71 <--window (msec);
#X text 354 241 tape head;
#X obj 319 301 phasor~;
#X obj 614 301 max 1.5;
#X text 616 163 delay;
#X text 613 181 (msec);
#X obj 537 145 max 1;
#X text 355 254 rotation freq;
#X text 719 182 This is a classic rotating-tape-head style pitch shifter
using the [vd~] variable delay object. Ther are two moving tape heads
\, each of which is loudest at the middle of its trajectory \, and
enveloped out at the moment it has to jump back (or forward) to start
another scratch. Most of the brain work is in computing how fast the
tape heads have to move to get the desired transposition.;
#X text 719 278 The "window size" is the total trajectory of the read
points in the delay line \, in milliseconds. The delay times are controlled
by a [phasor~] object. The second delay time \, 180 degrees out of
phase from the first one \, is computed using the "wrap" object.;
#X text 718 352 The "window size" is the total trajectory of the read
points in the delay line \, in milliseconds. The delay times are controlled
by a [phasor~] object. The second delay time \, 180 degrees out of
phase from the first one \, is computed using the "wrap" object.;
#X text 717 426 The [cos~] objects compute the fadein and fadeout of
the two delay line outputs. They each traverse the positive half of
the cosine waveform (phase -0.25 to +0.25) over the time the phase
goes from one end to the other.;
#X obj 483 398 cos~;
#X obj 483 348 -~ 0.5;
#X obj 483 374 *~ 0.5;
#X obj 484 424 *~;
#X obj 2 -40 delwrite~ \$0del 5000;
#X obj 551 398 vd~ \$0del;
#X obj 381 393 vd~ \$0del;
#X obj 506 265 line~;
#X obj 506 239 pack 0 200;
#X obj 584 16 r \$0window;
#X msg 933 20 0;
#X obj 615 204 r \$0delay;
#X text 128 230 0;
#X text 125 212 -1;
#X text 125 194 -2;
#X text 125 176 -3;
#X text 125 158 -4;
#X text 125 140 -5;
#X text 128 248 1;
#X text 128 266 2;
#X text 128 285 3;
#X text 128 303 4;
#X obj 318 -106 r \$0oktave;
#X floatatom 318 -84 5 0 0 0 - - -, f 5;
#X obj 318 -60 - 5;
#X obj 318 -36 * 12;
#X obj 110 331 hsl 100 15 0 127 0 0 \$0fine \$0fine_r fine 35 5 0 10
-99865 -260097 -262144 0 1;
#X obj 144 313 nbx 7 14 -1e+037 1e+037 0 0 empty empty pitch 17 -8
0 10 -262144 -1 -1 0 256 0;
#X obj 392 -99 r \$0fine;
#X obj 392 -50 * 12;
#X obj 319 20 - 1;
#X obj 392 -25 t b f;
#X obj 318 -8 f;
#X obj 392 -74 / 127;
#X obj 319 67 int;
#X obj 318 89 / 1000;
#X obj 318 45 * 1000;
#X obj 855 43 s \$0window_r;
#X obj 157 142 vsl 15 80 1.27 127 1 0 \$0window \$0window_r window
-10 106 0 10 -99865 -260097 -1 4084 1;
#X obj 191 171 vsl 15 80 0 127 0 0 \$0delay \$0delay_r delay -6 107
0 10 -99865 -260097 -1 0 1;
#X obj 143 229 nbx 4 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 100 256 0;
#X obj 494 135 int;
#X obj 173 258 nbx 4 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 1.5 256 0;
#X obj 179 12 inlet;
#X obj 140 13 inlet;
#X obj 223 16 inlet;
#X obj 933 58 s \$0delay_r;
#X obj 1087 36 s \$0oktave_r;
#X obj 991 38 s \$0fine_r;
#X msg 979 14 0;
#X obj 616 239 pow 1.7582;
#X obj 1025 559 route shift;
#X obj 1178 518 symbol shift;
#X obj 1239 345 clip 1 378;
#X obj 1336 458 r \$0oktave;
#X obj 1231 563 pack s f f f f f;
#X obj 1357 504 f;
#X obj 1383 546 f;
#X obj 1411 572 f;
#X obj 1377 484 r \$0fine;
#X obj 1399 510 r \$0window;
#X obj 1428 540 r \$0delay;
#X obj 1024 616 unpack f f f f;
#X obj 1026 640 s \$0oktave_r;
#X obj 1064 666 s \$0fine_r;
#X obj 1089 692 s \$0window_r;
#X obj 1119 722 s \$0delay_r;
#X obj 1184 467 t b f b b b b;
#X obj 448 185 * 0.001;
#X obj 497 93 + 0.5;
#X obj 549 55 pow 1.7582;
#X msg 858 16 13.73;
#X connect 1 0 63 0;
#X connect 3 0 106 0;
#X connect 5 0 110 0;
#X connect 6 0 14 0;
#X connect 7 0 114 2;
#X connect 9 0 126 0;
#X connect 10 0 121 0;
#X connect 11 0 13 0;
#X connect 12 0 9 1;
#X connect 12 0 10 1;
#X connect 12 0 112 0;
#X connect 13 0 12 0;
#X connect 14 0 9 0;
#X connect 15 0 16 0;
#X connect 16 0 4 0;
#X connect 17 0 2 0;
#X connect 18 0 41 0;
#X connect 18 0 86 0;
#X connect 19 0 27 0;
#X connect 20 0 53 0;
#X connect 21 0 22 0;
#X connect 22 0 40 0;
#X connect 23 0 36 0;
#X connect 24 0 27 1;
#X connect 24 0 33 1;
#X connect 25 0 24 0;
#X connect 26 0 50 0;
#X connect 27 0 65 0;
#X connect 28 0 29 0;
#X connect 29 0 30 0;
#X connect 30 0 17 0;
#X connect 31 0 32 0;
#X connect 31 0 60 0;
#X connect 32 0 33 0;
#X connect 33 0 64 0;
#X connect 34 0 130 0;
#X connect 34 0 69 0;
#X connect 34 0 108 0;
#X connect 34 0 3 0;
#X connect 35 0 23 0;
#X connect 35 1 23 1;
#X connect 36 0 49 0;
#X connect 37 0 31 0;
#X connect 38 0 39 0;
#X connect 39 0 28 0;
#X connect 40 0 42 0;
#X connect 41 0 21 0;
#X connect 42 0 23 0;
#X connect 49 0 19 0;
#X connect 49 0 38 0;
#X connect 49 0 37 0;
#X connect 50 0 25 0;
#X connect 50 0 101 0;
#X connect 53 0 67 0;
#X connect 53 0 127 0;
#X connect 53 0 128 0;
#X connect 59 0 62 0;
#X connect 60 0 61 0;
#X connect 61 0 59 0;
#X connect 62 0 30 1;
#X connect 64 0 62 1;
#X connect 65 0 29 1;
#X connect 66 0 32 1;
#X connect 66 0 19 1;
#X connect 67 0 66 0;
#X connect 68 0 129 0;
#X connect 69 0 105 0;
#X connect 70 0 109 0;
#X connect 81 0 82 0;
#X connect 82 0 83 0;
#X connect 83 0 84 0;
#X connect 84 0 91 0;
#X connect 87 0 92 0;
#X connect 88 0 90 0;
#X connect 89 0 95 0;
#X connect 90 0 91 0;
#X connect 90 1 89 1;
#X connect 91 0 89 0;
#X connect 92 0 88 0;
#X connect 93 0 94 0;
#X connect 94 0 18 0;
#X connect 95 0 93 0;
#X connect 100 0 99 0;
#X connect 102 0 97 0;
#X connect 103 0 85 0;
#X connect 104 0 98 0;
#X connect 108 0 107 0;
#X connect 109 0 26 0;
#X connect 110 0 10 0;
#X connect 111 0 114 0;
#X connect 112 0 14 1;
#X connect 113 0 7 1;
#X connect 114 0 8 0;
#X connect 115 0 114 3;
#X connect 116 0 114 4;
#X connect 117 0 114 5;
#X connect 118 0 115 1;
#X connect 119 0 116 1;
#X connect 120 0 117 1;
#X connect 121 0 122 0;
#X connect 121 1 123 0;
#X connect 121 2 124 0;
#X connect 121 3 125 0;
#X connect 126 0 111 0;
#X connect 126 1 114 1;
#X connect 126 2 7 0;
#X connect 126 3 115 0;
#X connect 126 4 116 0;
#X connect 126 5 117 0;
#X connect 127 0 35 0;
#X connect 128 0 100 0;
#X connect 129 0 20 0;
#X connect 130 0 96 0;
#X coords 0 -1 1 1 124 256 1 100 100;
